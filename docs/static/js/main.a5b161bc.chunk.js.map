{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","event","preventDefault","trim","length","lastValue","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GiftExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAC3B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACE,sBAAMC,SAVa,SAAAC,GACnBA,EAAMC,iBAEFJ,EAAWK,OAAOC,SACpBR,GAAc,SAAAS,GAAS,OAAKP,GAAL,mBAAoBO,OAC3CN,EAAc,MAKhB,SACE,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAfhB,SAAAP,GACxBF,EAAcE,EAAMQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACiCC,UAAUH,GAD3C,+DAEEI,MAAMF,GAFR,cAEfG,EAFe,gBAGAA,EAASC,OAHT,uBAGdC,EAHc,EAGdA,KACDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC5B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARjB,kBAYdM,GAZc,4CAAH,sDCEPO,EAAc,SAAC,GAAsB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEvC,OACE,sBAAKc,UAAU,2CAAf,UACE,qBAAKC,IAAMf,EAAMgB,IAAKN,IACtB,4BAAIA,QCFGO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SACvB,ECH0B,SAAAA,GAC1B,MAA0Bd,mBAAS,CACjCqB,KAAM,GACNa,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAaA,OARAC,qBAAU,WAERxB,EAAQC,GAAUwB,MAAK,SAAAC,GAAI,OAAIH,EAAS,CACtCf,KAAMkB,EACNL,SAAS,SAEV,CAACpB,IAEGqB,EDXgBK,CAAa1B,GAA7BO,EAAP,EAAOA,KAAKa,EAAZ,EAAYA,QAEZ,OACE,qCACE,oBAAIJ,UAAU,0CAAd,SAAyDhB,IACvDoB,GAAW,wCACb,qBAAKJ,UAAU,YAAf,SAEIT,EAAKE,KACH,SAAAC,GAAG,OACD,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aESrBgB,EArBO,WACpB,MAAoCzC,mBAAS,CAAC,aAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAKA,OACE,qCACE,+CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEI2C,EAAWnB,KAAI,SAAAT,GAAQ,OAAI,cAAC,EAAD,CAASA,SAAUA,GAAeA,Y,MCZvE6B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.a5b161bc.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({setCategories}) => {\n  const [inputValue, setInputValue] = useState('');\n  \n  const handleInputChange = event => {\n    setInputValue(event.target.value);\n  };\n  \n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (inputValue.trim().length) {\n      setCategories(lastValue => [inputValue, ...lastValue]); \n      setInputValue('');\n    }\n  };\n  \n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" value={inputValue} onChange={handleInputChange} />\n    </ form>\n  )\n}\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired\n}\n","export const getGifs = async( category ) => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=swbFspRTjwsaFOAtITNuUWGQ0AQGOedH`;\n  const response = await fetch(url);\n  const {data} = await response.json();\n  const gifs = data.map( img => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images?.downsized_medium.url\n    }\n  });\n\n  return gifs;\n};","import React from 'react'\n\nexport const GifGridItem = ({ id, title, url}) => {\n  \n  return (\n    <div className=\"card animate__animated animate__bounceIn\">\n      <img src={ url } alt={title} />\n      <p>{title}</p>\n    </div>\n  )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\n\nimport { GifGridItem } from './GifGridItem'\n\nexport const GifGrid = ({category}) => {\n  const {data,loading} = useFetchGifs(category);\n\n  return (\n    <>\n      <h3 className=\"animate__animated animate__bounceInLeft\">{category}</h3>\n      { loading && <p>Loading</p> }\n      <div className=\"card-grid\">  \n        {\n          data.map(\n            img => \n              <GifGridItem key={img.id} {...img} />\n          )\n        }\n      </div>\n    </>\n  )\n}\n","import { useState, useEffect } from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = category => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true\n  });\n\n  useEffect(()=>{\n    \n    getGifs(category).then(imgs => setState({\n      data: imgs,\n      loading: false\n    }));\n  }, [category]);\n\n  return state;\n}\n","import React, { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nconst GiftExpertApp = () => {\n  const [categories, setCategories] = useState(['Gorillaz' ]);\n  // const handleAdd = () => {\n  //   setCategories(['Radiohead', ...categories]);\n  // };\n\n  return (\n    <>\n      <h2>GiftExpertApp</h2>\n      <AddCategory setCategories={setCategories} />\n      <hr />\n\n      <ol>\n        {\n          categories.map(category => <GifGrid category={category} key={category} />)\n        }\n      </ol>\n    </>\n  );\n};\n\nexport default GiftExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GiftExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  \n    <GiftExpertApp />\n  ,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}